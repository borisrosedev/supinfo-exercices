openapi: 3.0.0
info:
  title: API
  version: 1.0.0
servers:
  - url: '{protocol}://localhost:3000/api'
    description: 'préfixe'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http

paths:
  /products:
    get:
      summary: 'Récupérer la liste des produits'
      responses:
        '200':
          description: Succès
          content: 
            application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Product'

    put: 
      summary: 'Créer un nouveau produit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/components/schemas/Product'

      responses:
        '201':
          description: Créé avec succès
          content:
            application/json:
              schema:
                type: object
    
  /users:
    get:
      summary: Récupérer la liste des utilisateurs
      responses:
        '200':
          description: Succès
          content:
            application/json:
              schema:
                type: array
    put:
      summary: Créer un nouvel utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Créé avec succès
          content:
            application/json:
              schema:
                type: object
  /users/{id}:
    delete:
      summary: Supprimer un utilisateur 
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Suppression de l'utilisateur
          content:
            application/json:
              schema:
                type: object
                
    post:
      summary: Mettre à jour un utilisateur
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: object
          
      responses:
        '200':
          description: Succès
          content:
            application/json:
              schema:
                type: object
          
components:
  schemas:
    Product: 
      type: object
      properties:
        _id: 
          type: object
        type: 
          type: string
          example: "croissant"
        price:
          type: integer
          example: 2
        quantity: 
          type: integer
          example: 30
        url: 
          type: string
          example: 'https://cdn.pixabay.com/photo/2016/05/12/13/35/cookies-1387826_1280.jpg'
     # Both properties are required
      required:  
        - quantity
        - description
        - price
        - url 
        - type
  



    User:
      type: object
      properties:
        id:
          type: string
          example: 4889219291
        email:
          type: string
          example: celine@gmail.com
        token:
          type: string 
          example: 0192LDSLS
      # Both properties are required
      required:  
        - id
        - email 
        - password 

     